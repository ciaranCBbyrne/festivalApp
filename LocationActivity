package ie.ncirl.festfriend;

import android.app.ActionBar.LayoutParams;
import android.content.IntentSender;
import android.location.Location;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.PopupWindow;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient;
import com.google.android.gms.location.LocationClient;
import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
 
public class LocationActivity extends FragmentActivity implements
GooglePlayServicesClient.ConnectionCallbacks,
GooglePlayServicesClient.OnConnectionFailedListener{
	
	// Stores the current instantiation of the location client in this object
    private LocationClient mLocationClient;
    
  /*
   * Define a request code to send to Google Play services
   * This code is returned in Activity.onActivityResult
   */
  private final static int CONNECTION_FAILURE_RESOLUTION_REQUEST = 9000;
	
	private GoogleMap map;
	static final LatLng DUBLIN = new LatLng(53.344103999999990000, -6.267493699999932000);
	static final LatLng STRADBALLY = new LatLng(53.015798, -7.149472);
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.location_layout);
		
		/*
    * Create a new location client, using the enclosing class to
    * handle callbacks.
    */
    mLocationClient = new LocationClient(this, this, this);
		
		map = ((MapFragment) getFragmentManager().findFragmentById(R.id.map))
		        .getMap();
		
	  //Move the camera instantly to Dublin with a zoom of 10.
    map.moveCamera(CameraUpdateFactory.newLatLngZoom(DUBLIN, 12));
	
	  final Button btnOpenPopup = (Button)findViewById(R.id.epmap);
    btnOpenPopup.setOnClickListener(
      new Button.OnClickListener(){

        @Override
        public void onClick(View view) {
          LayoutInflater layoutInflater 
            = (LayoutInflater)getBaseContext()
            .getSystemService(LAYOUT_INFLATER_SERVICE);  
          View popupView = layoutInflater.inflate(R.layout.pop_up_window, null);  
          final PopupWindow popupWindow = new PopupWindow(
            popupView, 
            LayoutParams.WRAP_CONTENT,  
            LayoutParams.WRAP_CONTENT);  
          popupWindow.showAtLocation(findViewById(R.id.main_layout), Gravity.CENTER, 0, 0);
                 
          Button btnDismiss = (Button)popupView.findViewById(R.id.dismiss);
          btnDismiss.setOnClickListener(
            new Button.OnClickListener(){
    
              @Override
              public void onClick(View v) {
                // TODO Auto-generated method stub
                popupWindow.dismiss();
              }
            }
          );
                   
          popupWindow.showAsDropDown(btnOpenPopup, 50, -30);
             
        }
      }
    );
  }

  public void getLocation(View v){
  	map.setMapType(GoogleMap.MAP_TYPE_NORMAL);
  	
  	Location mCurrentLocation = new Location("Home");
  	double homeLat = mCurrentLocation.getLatitude();
  	double homeLng = mCurrentLocation.getLongitude();
  	LatLng home = new LatLng(homeLat, homeLng);
  	
  	// Showing the current location in Google Map
    map.moveCamera(CameraUpdateFactory.newLatLng(DUBLIN));
  	map.addMarker(new MarkerOptions().position(DUBLIN).title("You"));
  	
  }
	
  public void getStradbally(View v){
  	map.setMapType(GoogleMap.MAP_TYPE_NORMAL);
  	CameraUpdate update = CameraUpdateFactory.newLatLngZoom(STRADBALLY, 12);
  	map.animateCamera(update);
  	map.addMarker(new MarkerOptions().position(STRADBALLY).title("Electric Picnic"));
  
  }

  /*
  * Called when the Activity becomes visible.
  */
  @Override
  protected void onStart() {
    super.onStart();
    // Connect the client.
    mLocationClient.connect();
  }
  
  @Override
  protected void onStop() {
    // Disconnecting the client invalidates it.
    mLocationClient.disconnect();
    super.onStop();
  }
  
  @Override
  public void onConnectionFailed(ConnectionResult result) {
    /*
    * Google Play services can resolve some errors it detects.
    * If the error has a resolution, try sending an Intent to
    * start a Google Play services activity that can resolve
    * error.
    */
    if (result.hasResolution()) {
      try {
        // Start an Activity that tries to resolve the error
      	result.startResolutionForResult(
          this,
          CONNECTION_FAILURE_RESOLUTION_REQUEST);
        
          /*
          * Thrown if Google Play services canceled the original
          * PendingIntent
          */
      } catch (IntentSender.SendIntentException e) {
        // Log the error
        e.printStackTrace();
      }
    } 
  }
  
  @Override
  public void onConnected(Bundle connectionHint) {
    // Display the connection status
    Toast.makeText(this, "Connected", Toast.LENGTH_SHORT).show();
  	
  }
  
  @Override
  public void onDisconnected() {
  	// Display the connection status
    Toast.makeText(this, "Disconnected. Please re-connect.",
      Toast.LENGTH_SHORT).show();
  	
  }
	
} 
